## -*- shell-script -*-

alias aliases='source ~/.bash.d/aliases'

alias 1='cd -1'
alias 10='cd -10'
alias 11='cd -11'
alias 12='cd -12'
alias 13='cd -13'
alias 14='cd -14'
alias 15='cd -15'
alias 16='cd -16'
alias 17='cd -17'
alias 18='cd -18'
alias 19='cd -19'
alias 2='cd -2'
alias 20='cd -20'
alias 21='cd -21'
alias 22='cd -22'
alias 3='cd -3'
alias 4='cd -4'
alias 5='cd -5'
alias 6='cd -6'
alias 7='cd -7'
alias 8='cd -8'
alias 9='cd -9'

alias b='cd -'

alias cp='\cp -ivb'

save () {
    local now=$(date +'%Y%m%dT%k%m%S')
    for f in "${@%/}"; do
        \cp --archive --interactive -- "${f}" "${f}.~${now}~"
    done
}

alias dc='darcs changes --summary LL'
alias dir='lll -A'
alias dr='darcs record'
alias dww='darcs whatsnew --unified --look-for-adds'
alias e='emacsclient -n'
alias ediff='Perl -S ediff.pl'
alias j='jobs -l'

if inside_emacs; then
    ls_color='always'
else
    ls_color='auto'
fi

alias ls="ls -xBFh -T0 --color=$ls_color"
alias lst='ls -tr'
alias la='ls -A'
alias ll='ls -l'
alias llt='ls -ltr'

alias path='echo -e "${PATH//:/\\n}"'
pathed () {
    local TMP=${TMP:-/tmp}

    if [[ ${OSTYPE} == cygwin ]]; then
        TMP="$(cygpath -w "$TMP" | sed -e 's/\\/\//g')";
    elif [[ ${OSTYPE} == msys ]]; then
        TMP="$(echo "$TMP" | sed -e 's|^/\\(.\\)/|\\1:/|')";
    else
        TMP="$TMP";
    fi;

    local TEMPFILE="${TMP}/path-$$-$RANDOM"
    echo -e "${PATH//:/\\n}" > "${TEMPFILE}"
    $EDITOR "${TEMPFILE}"
    PATH=$(sed -e :a -e '$!N; s/\n/:/; ta' "${TEMPFILE}")

    ## can't we use `trap' *locally* for that?
    rm -f "${TEMPFILE}"
}

alias ver='echo $BASH_VERSION $MACHTYPE'

ff () {
    local dir

    if [[ $# -eq 0 ]]; then
        echo 'da fehlt was...' >&2
        return 1
    elif [[ $# -eq 1 ]]; then
        dir="."
    else
        dir="$1"
        shift
    fi

    find "$dir" -iname "$@"
}

gg () { grep -r "$@" . ; }

if inside_emacs; then
    ack () { command ack "$@" </dev/null; }
fi

alias mkdir='\mkdir -p'
alias mv='\mv -ivb'

alias txj='tar -xjf'
alias txz='tar -xzf'

x () {
    if [[ $# -ne 1 ]]; then
        echo "ERROR: expecting exactly one argument, got $#"
    elif [[ -f "$1" ]]; then
        case "$1" in
            *.tar.bz2)
                tar xvjf "$1" ;;
            *.tar.gz)
                tar xvzf "$1" ;;
            *.bz2)
                bunzip2 "$1" ;;
            *.rar)
                unrar x "$1" ;;
            *.gz)
                gunzip "$1" ;;
            *.tar)
                tar xvf "$1" ;;
            *.tbz2)
                tar xvjf "$1" ;;
            *.tgz)
                tar xvzf "$1" ;;
            *.zip)
                unzip "$1" ;;
            *.Z)
                uncompress "$1" ;;
            *.7z)
                7z x "$1" ;;
            *)
                echo "ERROR: unknown archive format: '$1'"
                return 1 ;;
        esac
    else
        echo "File '$1' does not exist"
    fi
}

alias u='cd ..'
alias uu='cd ../..'
alias uuu='cd ../../..'
alias uuuu='cd ../../../..'
alias uuuuu='cd ../../../../..'

map () {
    if [ $# -le 1 ]; then
        return
    else
        local f="$1"
        local x="$2"
        shift 2

        $f "$x"

        map "$f" "$@"
    fi
}

hr () {
    history -n
    if [[ ${INSIDE_EMACS} == *comint* ]] && type emacsclient > /dev/null 2>&1; then
        emacsclient --eval "(and (fboundp 'with-buffer-hosting-pid) (with-buffer-hosting-pid $$ (comint-read-input-ring)))" > /dev/null
    fi
}
alias hs='history -a'

history_stats () {
  history | awk '{a[$2]++}END{for(i in a){print a[i] " " i}}' | sort -rn | head
}

help! () {
    cat <<EOF
!!                 # Last command and all arguments
!-3                # Third-to-last command and all arguments
!^                 # First argument of last command
!42^               # First argument of the 42nd command in history
!:2                # Second argument of last command
!42:2              # Second argument of the 42nd command in history
!$                 # Last argument of last command
!*                 # All arguments of the last command
!42                # Expands to the 42nd command in history
!42*               # All arguments of the 42nd command in history
!42:1:t            # Basename ("tail") of the first argument of the 42nd command in history
!42:1:h            # Dirname ("head") of the first argument of the 42nd command in history
!42:1:t:r          # Basename of the first argument of the 42nd command in history, sans trailing suffix
!foo               # Last command beginning with 'foo'
!?foo              # Last command containing 'foo'
^foo^bar           # Last command with first instance of 'foo' replaced with 'bar'
!!:gs/foo/bar      # Last command with all instances of 'foo' replaced with 'bar
<command>:p        # Don't execute, just print command
EOF
}

alias po='popd'
alias pu='pushd'

alias r='fc -s'
alias rm='\rm -v'
alias rs='eval $(resize)'

alias op='cygstart'

alias update-cfg='Perl -I e:/home/ecl/perl/update-config e:/home/ecl/perl/update-config/update-config.pl'
alias xml_validate='e:/qx29999/tools/xml_validate/validate.pl'

alias bms08='desktop CMSynergy\ 6.4\ -\ bms08.lnk'
alias swepit='desktop SWEPiT.lnk'

md () {
    mkdir --parents "$1" && cd "$1"
}

hash -p $(type -p ccm.bat) ccm  > /dev/null 2>&1
hash -p f:/apps/PortableGit-1.7.4/bin/git.exe git > /dev/null 2>&1

repo='https://asc-repo.bmwgroup.net/svn/asc045'
projs="${repo}/Projects"

svn16 () { PATH=/cygdrive/e/tools/Subversion-1.6.11/bin:"$PATH" "$@"; }
svn17 () { PATH=/cygdrive/c/Progra~1/SlikSvn/bin:"$PATH" "$@"; }
tort17 () { PATH=/cygdrive/c/Progra~1/TortoiseSVN/bin:"$PATH" "$@"; }

perl510 () {
    local PERL510_DIR="/cygdrive/c/tools/Perl_5_10_0_1005"
    PATH="${PERL510_DIR}/bin":"$PATH" "$@";
}

alias svn='svn --non-interactive'
alias svnu='svn update --ignore-externals'
alias svns='svn status --ignore-externals'
alias svnd='svn diff'
alias svnl='svn log --limit 10'
alias svn.news='svn log -rBASE:HEAD'
alias svn.ext='svn pg svn:externals'
function svn.url { svn info "$@" 2>/dev/null | awk -F': ' '$1 == "URL" {print $2}' ; }

alias gits='git status --short --branch'

repobrowser () {
    ## http://tortoisesvn.net/docs/release/TortoiseSVN_en/tsvn-automation.html#tsvn-automation-basics
    TortoiseProc /command:repobrowser /path:"$1" &
    disown $!
}

proxy () {
    local pwd
    read -s -p "password: " pwd
    echo

    for p in http https; do
        export ${p}_proxy="${p}://${USER}${pwd:+:${pwd}}@proxy.muc:8080"
    done
}

alias brotzeit='cygstart //europe.bmw.corp/winfs/EA-org/EA-4_Org/EA-41/EA-41/40_Allgemein/04_Austausch/Ern/Brotzeit/aktuelle_Brotzeit_Bestellliste.xls'

#
alias cfg='configure.cmd --walayout=absolute'
alias mkg='mk MAKE_DBG=ON debug=1'
alias mkx='mk expert=1'
